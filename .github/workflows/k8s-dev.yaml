name: K8s AWS Dev Deployment

on:
  pull_request:
    branches: [ dev ]
    types: [closed]


jobs:
  

  build:
    if: github.event.pull_request.merged == true    
    name: Build Image
    runs-on: ubuntu-latest

   
    steps:
    
    - name: Check out code
      uses: actions/checkout@v2
    # render variables that exist on the secrets of the repository
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1
    #Login on ecr 
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    #Building and pushing images
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: frontend
        IMAGE_TAG: d8x-trader-${{ github.sha }}
        PORT_WEBSOCKET: 8080
        PORT: 3001
        REDIS_URL: redis://:${{ secrets.REDIS_DEV }}@redis-master.redis-dev.svc.cluster.local:6379/0
      run: |
        docker build -f Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --build-arg REACT_APP_API_URL=$REACT_APP_API_URL --build-arg REACT_APP_WEBSOCKET_URL=$REACT_APP_WEBSOCKET_URL .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG



  deploy:

    if: github.event.pull_request.merged == true   
    name: Deploy app to Kubernetes
    runs-on: ubuntu-latest

    steps:
      - name: checkout and pull tag version
        uses: actions/checkout@v2  
    #does not yet work here
      - id: get-tag-version
        run: |
          git fetch --prune --unshallow
          echo "TAG_VERSION=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

    #Checkout DevOps repo with PAT_TOKEN token
      - name: Checkout DevOpsArgoCD
        uses: actions/checkout@v3
        with:
          repository: D8-X/devops
          token: ${{ secrets.PAT_TOKEN }}
    #Substitute the values on the service app
      - name: Render Deployment YAML
        uses: nowactions/envsubst@v1
        with:
          input: ./charts/backend/d8x-trader/versions.tpl
          output: ./charts/backend/d8x-trader/versions-dev.yaml
        env:
          IMAGE_VERSION: d8x-trader-${{ github.sha }}
          RELEASE_VERSION: ${{ env.TAG_VERSION }}

      - name: Push 
        run:  |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Image version dev ${{ github.sha }}"
          git push