diff --git a/node_modules/ethers/dist/ethers.js b/node_modules/ethers/dist/ethers.js
index 474d515..fb61ce8 100644
--- a/node_modules/ethers/dist/ethers.js
+++ b/node_modules/ethers/dist/ethers.js
@@ -15530,6 +15530,7 @@ function object(format, altNames) {
                 }
             }
             catch (error) {
+                console.log("error:", error, "address:", value[srcKey]);
                 const message = (error instanceof Error) ? error.message : "not-an-error";
                 assert$1(false, `invalid value for value.${key} (${message})`, "BAD_DATA", { value });
             }
@@ -15570,6 +15571,7 @@ const _formatLog = object({
     index: ["logIndex"]
 });
 function formatLog(value) {
+    console.log("formatLog:value", value);
     return _formatLog(value);
 }
 const _formatBlock = object({
diff --git a/node_modules/ethers/lib.commonjs/address/address.js b/node_modules/ethers/lib.commonjs/address/address.js
index 991c5dd..ea06bef 100644
--- a/node_modules/ethers/lib.commonjs/address/address.js
+++ b/node_modules/ethers/lib.commonjs/address/address.js
@@ -107,6 +107,7 @@ function fromBase36(value) {
  *    //_error:
  */
 function getAddress(address) {
+    console.log("address:", address);
     (0, index_js_2.assertArgument)(typeof (address) === "string", "invalid address", "address", address);
     if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {
         // Missing the 0x prefix
@@ -128,6 +129,7 @@ function getAddress(address) {
         }
         return getChecksumAddress("0x" + result);
     }
+    console.log("Address:", address);
     (0, index_js_2.assertArgument)(false, "invalid address", "address", address);
 }
 exports.getAddress = getAddress;
diff --git a/node_modules/ethers/lib.commonjs/providers/format.js b/node_modules/ethers/lib.commonjs/providers/format.js
index a549999..7263026 100644
--- a/node_modules/ethers/lib.commonjs/providers/format.js
+++ b/node_modules/ethers/lib.commonjs/providers/format.js
@@ -101,7 +101,7 @@ const _formatLog = object({
     index: ["logIndex"]
 });
 function formatLog(value) {
-    return _formatLog(value);
+    return _formatLog(Array.isArray(value) ? value[0] : value);
 }
 exports.formatLog = formatLog;
 const _formatBlock = object({
diff --git a/node_modules/ethers/src.ts/providers/format.ts b/node_modules/ethers/src.ts/providers/format.ts
index 7f4fcc5..ffa73f7 100644
--- a/node_modules/ethers/src.ts/providers/format.ts
+++ b/node_modules/ethers/src.ts/providers/format.ts
@@ -54,6 +54,7 @@ export function object(format: Record<string, FormatFunc>, altNames?: Record<str
                 const nv = format[key](value[srcKey]);
                 if (nv !== undefined) { result[key] = nv; }
             } catch (error) {
+                console.log("the error", error);
                 const message = (error instanceof Error) ? error.message: "not-an-error";
                 assert(false, `invalid value for value.${ key } (${ message })`, "BAD_DATA", { value })
             }
@@ -104,6 +105,7 @@ const _formatLog = object({
 });
 
 export function formatLog(value: any): LogParams {
+    console.log("formatLog:value", value);
     return _formatLog(value);
 }
 
