# docker-compose.yml

#docker rmi $(docker images -f "dangling=true" -q)
#sudo docker-compose --env-file .env up --build
version: "3"
services:
    redis:
        image: redis
        environment:
            - REDIS_ARGS=--requirepass ${REDIS_PASSWORD}
        ports:
            - "127.0.0.1:6379:6379"
        command: redis-server --bind 0.0.0.0 --requirepass ${REDIS_PASSWORD}
        logging:
            driver: "json-file"
            options:
                max-size: "1k"
                max-file: "10"

    # REST/WS server for frontend
    backend_main:
        build:
            context: .
            dockerfile: ./packages/api/Dockerfile
        depends_on:
            - redis
        environment:
            - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
            - MAIN_API_PORT_HTTP=${MAIN_API_PORT_HTTP}
            - MAIN_API_PORT_WEBSOCKET=${MAIN_API_PORT_WEBSOCKET}
            - CHAIN_ID=${CHAIN_ID}
            - SDK_CONFIG_NAME=${SDK_CONFIG_NAME}
            - CORS_ON=${CORS_ON}
            - CONFIG_PATH_RPC=/cfg_rpc
            - CONFIG_PATH_PRICES=/cfg_prices
        ports:
            - "127.0.0.1:${MAIN_API_PORT_WEBSOCKET}:${MAIN_API_PORT_WEBSOCKET}"
            - "127.0.0.1:${MAIN_API_PORT_HTTP}:${MAIN_API_PORT_HTTP}"
            - "8880:8880" # historyAPIEndpoint
        restart: on-failure
        logging:
            driver: "json-file"
            options:
                max-size: "5000k"
                max-file: "10"
        configs:
            - cfg_rpc
            - cfg_prices

    # History component listens to block-chain events and stores them in postgres
    # Exposes a REST API
    backend_history:
        build:
            context: .
            dockerfile: ./packages/history/Dockerfile
        depends_on:
            - postgres
        environment:
            - DATABASE_DSN_HISTORY=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?schema=public
            - API_PORT=${HISTORY_API_PORT_HTTP}
            - SDK_CONFIG_NAME=${SDK_CONFIG_NAME}
            - CHAIN_ID=${CHAIN_ID}
            - CORS_ON=${CORS_ON}
            - CONFIG_PATH_RPC=/cfg_rpc
        ports:
            - "127.0.0.1:${HISTORY_API_PORT_HTTP}:${HISTORY_API_PORT_HTTP}"
        restart: on-failure
        logging:
            driver: "json-file"
            options:
                max-size: "5000k"
                max-file: "10"
        configs:
            - cfg_rpc

    # Database component required by history
    postgres:
        image: postgres:15
        environment:
            POSTGRES_USER: ${POSTGRES_USER:-postgres}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
            POSTGRES_DB: ${POSTGRES_DB:-postgres}
        ports:
            - 127.0.0.1:${POSTGRES_PORT_HISTORY:-5432}:5432
        volumes:
            - pgdb:/var/lib/postgresql/data
        logging:
            driver: "json-file"
            options:
                max-size: "1k"
                max-file: "10"
volumes:
    pgdb:
configs:
    cfg_rpc:
        file: ./config/live.rpc.json
    cfg_prices:
        file: ./config/prices.config.rpc
