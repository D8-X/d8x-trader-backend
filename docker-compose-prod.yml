# docker-compose.yml

#docker rmi $(docker images -f "dangling=true" -q)
#sudo docker-compose --env-file .env up --build
version: "3"
services:
  redis:
    image: redis
    environment:
      - REDIS_ARGS=--requirepass ${REDIS_PASSWORD}
    ports:
      # - "127.0.0.1:6379:6379"
      # Production redis is exposed to other nodes (main-api) in our network
      - "6379:6379"
    command: redis-server --bind 0.0.0.0 --requirepass ${REDIS_PASSWORD}
    logging:
      driver: "json-file"
      options:
        max-size: "1k"
        max-file: "10"
    restart: "always"
  # History component listens to block-chain events and stores them in postgres
  # Exposes a REST API
  backend_history:
    build:
      context: .
      dockerfile: ./packages/history/Dockerfile
    environment:
      - DATABASE_DSN_HISTORY=${DATABASE_DSN_HISTORY}
      - API_PORT=${PNL_API_PORT:-8888}
      - SDK_CONFIG_NAME=${SDK_CONFIG_NAME}
      - CHAIN_ID=${CHAIN_ID}
      - CORS_ON=${CORS_ON}
    ports:
      - "127.0.0.1:${PNL_API_PORT:-8888}:${PNL_API_PORT:-8888}"
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "5000k"
        max-file: "10"
    configs:
      - cfg_rpc
      - cfg_referral
      - cfg_wscfg

  # Referral component that handles referral/agency/broker/trader rebates
  # Exposes a REST API and uses the postgres DB that the history component mainly fills
  backend_referral:
    build:
      context: .
      dockerfile: ./packages/referral/Dockerfile
    depends_on:
      - redis
    environment:
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - DATABASE_DSN_REFERRAL=${DATABASE_DSN_REFERRAL}
      - REFERRAL_API_PORT=${REFERRAL_API_PORT}
      - BROKER_KEY=${BROKER_KEY}
      - CHAIN_ID=${CHAIN_ID}
      - CORS_ON=${CORS_ON}
      - HISTORY_API_ENDPOINT="http://backend_history:${PNL_API_PORT:-8888}"
    ports:
      - "127.0.0.1:${REFERRAL_API_PORT}:${REFERRAL_API_PORT}"
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "5000k"
        max-file: "10"
    configs:
      - pg_ca_cert
      - cfg_rpc
      - cfg_referral
      - cfg_wscfg

  # stream oracle prices from price service (pyth 'offchain'-network)
  backend_pyth_connection:
    stdin_open: true # docker run -i
    tty: true # docker run -t
    build:
      context: .
      dockerfile: ./packages/pxws-client/Dockerfile
    links:
      - redis
    environment:
      REDIS_URL: "redis://:${REDIS_PASSWORD}@redis:6379/0"
      PORT_REST: ${PORT_REST}
      PORT_WEBSOCKET: ${PORT_WEBSOCKET}
      CHAIN_ID: ${CHAIN_ID}
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "1k"
        max-file: "10"
    configs:
      - cfg_rpc
      - cfg_referral
      - cfg_wscfg

volumes:
  pgdb:
  pgdb_referral:

configs:
  pg_ca_cert:
    file: "./pg_ca_cert.ca"
  configs:
  cfg_rpc:
    external: true
  cfg_referral:
    external: true
  cfg_wscfg:
    external: true
